{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "cli": {
    "analytics": false
  },
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "Saras-eMarkingClient": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:application": {
          "strict": false
        }
      },
      "root": "",
      "sourceRoot": "src",
      "prefix": "emarking",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "allowedCommonJsDependencies": [ "crypto-js" ],
            "outputPath": "dist",
            "index": "src/index.html",
            "main": "src/main.ts",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "tsconfig.app.json",
            "assets": [
              "src/favicon.ico",
              "src/assets",
              "src/web.config"
            ],
            "styles": [
              "node_modules/ngx-owl-carousel-o/lib/styles/prebuilt-themes/owl.carousel.min.css",
              "node_modules/ngx-owl-carousel-o/lib/styles/prebuilt-themes/owl.theme.default.min.css",
              "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
              "node_modules/bootstrap/dist/css/bootstrap.min.css",
              "src/assets/trial-marking/css/OnScreenMarker.css",
              "src/styles.css"
            ],
            "scripts": [
              "node_modules/bootstrap/dist/js/bootstrap.bundle.min.js",
              "node_modules/swup/dist/swup.js",
              "src/assets/trial-marking/js/jquery.min.js",
              "src/assets/trial-marking/js/annotation.js"
            ]
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "10mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "5kb",
                  "maximumError": "10kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all",
              "buildOptimizer": true,
              "optimization": true,
              "vendorChunk": false
            },
            "staging": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.staging.ts"
                }
              ],
              "outputHashing": "all",
              "buildOptimizer": true,
              "optimization": true,
              "vendorChunk": false
            },
            "archivetesting": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.archivetesting.ts"
                }
              ],
              "outputHashing": "all",
              "buildOptimizer": true,
              "optimization": true,
              "vendorChunk": false
            },

            "qaarchive": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.qaarchive.ts"
                }
              ],
              "outputHashing": "all",
              "buildOptimizer": true,
              "optimization": true,
              "vendorChunk": false
            },

            "archiveuat": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.archiveuat.ts"
                }
              ],
              "outputHashing": "all",
              "buildOptimizer": true,
              "optimization": true,
              "vendorChunk": false
            },
            "testing": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.qa.ts"
                }
              ],
              "outputHashing": "all",
              "buildOptimizer": true,
              "optimization": true,
              "vendorChunk": false
            },
            "XLcloud": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.XLcloud.ts"
                }
              ],
              "outputHashing": "all",
              "buildOptimizer": true,
              "optimization": true,
              "vendorChunk": false
            },
            "sit": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.sit.ts"
                }
              ],
              "outputHashing": "all",
              "buildOptimizer": true,
              "optimization": true,
              "vendorChunk": false
            },
            "uat": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.uat.ts"
                }
              ],
              "outputHashing": "all",
              "buildOptimizer": true,
              "optimization": true,
              "vendorChunk": false
            },
            "uatrel": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.uatrel.ts"
                }
              ],
              "outputHashing": "all",
              "buildOptimizer": true,
              "optimization": true,
              "vendorChunk": false
            },
            "catperf": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.catperf.ts"
                }
              ],
              "outputHashing": "all",
              "buildOptimizer": true,
              "optimization": true,
              "vendorChunk": false
            },
            "cat": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.cat.ts"
                }
              ],
              "outputHashing": "all",
              "buildOptimizer": true,
              "optimization": true,
              "vendorChunk": false
            },
            "Security": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.Security.ts"
                }
              ],
              "outputHashing": "all",
              "buildOptimizer": true,
              "optimization": true,
              "vendorChunk": false
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": false,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "development"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "Saras-eMarkingClient:build:production"
            },
            "development": {
              "browserTarget": "Saras-eMarkingClient:build:development",
              "proxyConfig": "src/proxy.conf.json"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "Saras-eMarkingClient:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "src/test.ts",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "tsconfig.spec.json",
            "karmaConfig": "karma.conf.js",
            "assets": [
              "src/favicon.ico",
              "src/assets",
              "src/web.config"
            ],
            "styles": [
              "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
              "src/styles.css"
            ],
            "scripts": []
          }
        }
      }
    }
  },
  "defaultProject": "Saras-eMarkingClient"
}
