//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LicensingAndTransfer.Client.localhost {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TestCenter", Namespace="http://LicensingAndTransfer.DataContracts/2010/01")]
    [System.SerializableAttribute()]
    public partial class TestCenter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long IDField;
        
        private string MacIDField;
        
        private string CenterNameField;
        
        private string CenterCodeField;
        
        private bool IsAvailableField;
        
        private long AddressIDField;
        
        private long CreatedByField;
        
        private System.DateTime CreatedDateField;
        
        private long ModifiedByField;
        
        private System.DateTime ModifiedDateField;
        
        private long ParentIDField;
        
        private long LocationIDField;
        
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string MacID {
            get {
                return this.MacIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MacIDField, value) != true)) {
                    this.MacIDField = value;
                    this.RaisePropertyChanged("MacID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string CenterName {
            get {
                return this.CenterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CenterNameField, value) != true)) {
                    this.CenterNameField = value;
                    this.RaisePropertyChanged("CenterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string CenterCode {
            get {
                return this.CenterCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CenterCodeField, value) != true)) {
                    this.CenterCodeField = value;
                    this.RaisePropertyChanged("CenterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public bool IsAvailable {
            get {
                return this.IsAvailableField;
            }
            set {
                if ((this.IsAvailableField.Equals(value) != true)) {
                    this.IsAvailableField = value;
                    this.RaisePropertyChanged("IsAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public long AddressID {
            get {
                return this.AddressIDField;
            }
            set {
                if ((this.AddressIDField.Equals(value) != true)) {
                    this.AddressIDField = value;
                    this.RaisePropertyChanged("AddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public long ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public long ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public long LocationID {
            get {
                return this.LocationIDField;
            }
            set {
                if ((this.LocationIDField.Equals(value) != true)) {
                    this.LocationIDField = value;
                    this.RaisePropertyChanged("LocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerTypes", Namespace="http://schemas.datacontract.org/2004/07/LicensingAndTransfer.DataContracts")]
    public enum ServerTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ControllerOfExamination = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataExchangeServer = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TestCenter = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataServer = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataCenterDistributed = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataCenterCentralized = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Operations", Namespace="http://schemas.datacontract.org/2004/07/LicensingAndTransfer.DataContracts")]
    public enum Operations : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QPackTransfer = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QPackFetch = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RPackTransfer = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RPackFetch = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PackageStatistics", Namespace="http://LicensingAndTransfer.DataContracts/2010/01")]
    [System.SerializableAttribute()]
    public partial class PackageStatistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long IDField;
        
        private long ScheduleIDField;
        
        private long TestCenterIDField;
        
        private string PackageTypeField;
        
        private System.DateTime GeneratedDateField;
        
        private bool TransferredToDataExchangeServerField;
        
        private System.DateTime TransferredToDataExchangeServerOnField;
        
        private bool TransferredToTestCenterField;
        
        private System.DateTime TransferredToTestCenterOnField;
        
        private bool TransferredToDataCenterDistributedField;
        
        private System.DateTime TransferredToDataCenterDistributedOnField;
        
        private bool TransferredToDataCenterCentralizedField;
        
        private System.DateTime TransferredToDataCenterCentralizedOnField;
        
        private int RecievedFromDataExchangeServerField;
        
        private System.DateTime RecievedFromDataExchangeServerOnField;
        
        private int RecievedFromTestCenterField;
        
        private System.DateTime RecievedFromTestCenterOnField;
        
        private int RecievedFromDataCenterDistributedField;
        
        private System.DateTime RecievedFromDataCenterDistributedOnField;
        
        private int RecievedFromDataCenterCentralizedField;
        
        private System.DateTime RecievedFromDataCenterCentralizedOnField;
        
        private string PackageNameField;
        
        private string PackagePasswordField;
        
        private string PackagePathField;
        
        private long OrganizationIDField;
        
        private string OrganizationNameField;
        
        private long DivisionIDField;
        
        private string DivisionNameField;
        
        private long ProcessIDField;
        
        private string ProcessNameField;
        
        private long EventIDField;
        
        private string EventNameField;
        
        private long BatchIDField;
        
        private string BatchNameField;
        
        private string TestCenterNameField;
        
        private System.DateTime ScheduleDateField;
        
        private System.DateTime ScheduleStartDateField;
        
        private System.DateTime ScheduleEndDateField;
        
        private int LeadTimeForQPackDispatchInMinutesField;
        
        private bool DeleteQPackAfterExaminationField;
        
        private bool RPackToBeSentImmediatelyAfterExaminationField;
        
        private bool RPackToBeSentAtEODField;
        
        private bool DeleteRPackAfterExaminationField;
        
        private bool DeleteRPackAtEODField;
        
        private bool PackageDeletedStatusField;
        
        private bool IsCentralizedPackageField;
        
        private string Extension1Field;
        
        private string Extension2Field;
        
        private string Extension3Field;
        
        private string Extension4Field;
        
        private string Extension5Field;
        
        private long ScheduleDetailIDField;
        
        private System.DateTime LoadedDateTestCenterField;
        
        private bool IsPackageGeneratedField;
        
        private bool IsLatestField;
        
        private System.DateTime LoadedDateCentralizedField;
        
        private System.DateTime LoadedDateDistributedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long ScheduleID {
            get {
                return this.ScheduleIDField;
            }
            set {
                if ((this.ScheduleIDField.Equals(value) != true)) {
                    this.ScheduleIDField = value;
                    this.RaisePropertyChanged("ScheduleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long TestCenterID {
            get {
                return this.TestCenterIDField;
            }
            set {
                if ((this.TestCenterIDField.Equals(value) != true)) {
                    this.TestCenterIDField = value;
                    this.RaisePropertyChanged("TestCenterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string PackageType {
            get {
                return this.PackageTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageTypeField, value) != true)) {
                    this.PackageTypeField = value;
                    this.RaisePropertyChanged("PackageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public System.DateTime GeneratedDate {
            get {
                return this.GeneratedDateField;
            }
            set {
                if ((this.GeneratedDateField.Equals(value) != true)) {
                    this.GeneratedDateField = value;
                    this.RaisePropertyChanged("GeneratedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public bool TransferredToDataExchangeServer {
            get {
                return this.TransferredToDataExchangeServerField;
            }
            set {
                if ((this.TransferredToDataExchangeServerField.Equals(value) != true)) {
                    this.TransferredToDataExchangeServerField = value;
                    this.RaisePropertyChanged("TransferredToDataExchangeServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.DateTime TransferredToDataExchangeServerOn {
            get {
                return this.TransferredToDataExchangeServerOnField;
            }
            set {
                if ((this.TransferredToDataExchangeServerOnField.Equals(value) != true)) {
                    this.TransferredToDataExchangeServerOnField = value;
                    this.RaisePropertyChanged("TransferredToDataExchangeServerOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public bool TransferredToTestCenter {
            get {
                return this.TransferredToTestCenterField;
            }
            set {
                if ((this.TransferredToTestCenterField.Equals(value) != true)) {
                    this.TransferredToTestCenterField = value;
                    this.RaisePropertyChanged("TransferredToTestCenter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public System.DateTime TransferredToTestCenterOn {
            get {
                return this.TransferredToTestCenterOnField;
            }
            set {
                if ((this.TransferredToTestCenterOnField.Equals(value) != true)) {
                    this.TransferredToTestCenterOnField = value;
                    this.RaisePropertyChanged("TransferredToTestCenterOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public bool TransferredToDataCenterDistributed {
            get {
                return this.TransferredToDataCenterDistributedField;
            }
            set {
                if ((this.TransferredToDataCenterDistributedField.Equals(value) != true)) {
                    this.TransferredToDataCenterDistributedField = value;
                    this.RaisePropertyChanged("TransferredToDataCenterDistributed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public System.DateTime TransferredToDataCenterDistributedOn {
            get {
                return this.TransferredToDataCenterDistributedOnField;
            }
            set {
                if ((this.TransferredToDataCenterDistributedOnField.Equals(value) != true)) {
                    this.TransferredToDataCenterDistributedOnField = value;
                    this.RaisePropertyChanged("TransferredToDataCenterDistributedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public bool TransferredToDataCenterCentralized {
            get {
                return this.TransferredToDataCenterCentralizedField;
            }
            set {
                if ((this.TransferredToDataCenterCentralizedField.Equals(value) != true)) {
                    this.TransferredToDataCenterCentralizedField = value;
                    this.RaisePropertyChanged("TransferredToDataCenterCentralized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public System.DateTime TransferredToDataCenterCentralizedOn {
            get {
                return this.TransferredToDataCenterCentralizedOnField;
            }
            set {
                if ((this.TransferredToDataCenterCentralizedOnField.Equals(value) != true)) {
                    this.TransferredToDataCenterCentralizedOnField = value;
                    this.RaisePropertyChanged("TransferredToDataCenterCentralizedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=13)]
        public int RecievedFromDataExchangeServer {
            get {
                return this.RecievedFromDataExchangeServerField;
            }
            set {
                if ((this.RecievedFromDataExchangeServerField.Equals(value) != true)) {
                    this.RecievedFromDataExchangeServerField = value;
                    this.RaisePropertyChanged("RecievedFromDataExchangeServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=14)]
        public System.DateTime RecievedFromDataExchangeServerOn {
            get {
                return this.RecievedFromDataExchangeServerOnField;
            }
            set {
                if ((this.RecievedFromDataExchangeServerOnField.Equals(value) != true)) {
                    this.RecievedFromDataExchangeServerOnField = value;
                    this.RaisePropertyChanged("RecievedFromDataExchangeServerOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=15)]
        public int RecievedFromTestCenter {
            get {
                return this.RecievedFromTestCenterField;
            }
            set {
                if ((this.RecievedFromTestCenterField.Equals(value) != true)) {
                    this.RecievedFromTestCenterField = value;
                    this.RaisePropertyChanged("RecievedFromTestCenter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=16)]
        public System.DateTime RecievedFromTestCenterOn {
            get {
                return this.RecievedFromTestCenterOnField;
            }
            set {
                if ((this.RecievedFromTestCenterOnField.Equals(value) != true)) {
                    this.RecievedFromTestCenterOnField = value;
                    this.RaisePropertyChanged("RecievedFromTestCenterOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=17)]
        public int RecievedFromDataCenterDistributed {
            get {
                return this.RecievedFromDataCenterDistributedField;
            }
            set {
                if ((this.RecievedFromDataCenterDistributedField.Equals(value) != true)) {
                    this.RecievedFromDataCenterDistributedField = value;
                    this.RaisePropertyChanged("RecievedFromDataCenterDistributed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=18)]
        public System.DateTime RecievedFromDataCenterDistributedOn {
            get {
                return this.RecievedFromDataCenterDistributedOnField;
            }
            set {
                if ((this.RecievedFromDataCenterDistributedOnField.Equals(value) != true)) {
                    this.RecievedFromDataCenterDistributedOnField = value;
                    this.RaisePropertyChanged("RecievedFromDataCenterDistributedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=19)]
        public int RecievedFromDataCenterCentralized {
            get {
                return this.RecievedFromDataCenterCentralizedField;
            }
            set {
                if ((this.RecievedFromDataCenterCentralizedField.Equals(value) != true)) {
                    this.RecievedFromDataCenterCentralizedField = value;
                    this.RaisePropertyChanged("RecievedFromDataCenterCentralized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=20)]
        public System.DateTime RecievedFromDataCenterCentralizedOn {
            get {
                return this.RecievedFromDataCenterCentralizedOnField;
            }
            set {
                if ((this.RecievedFromDataCenterCentralizedOnField.Equals(value) != true)) {
                    this.RecievedFromDataCenterCentralizedOnField = value;
                    this.RaisePropertyChanged("RecievedFromDataCenterCentralizedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=21)]
        public string PackageName {
            get {
                return this.PackageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageNameField, value) != true)) {
                    this.PackageNameField = value;
                    this.RaisePropertyChanged("PackageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=22)]
        public string PackagePassword {
            get {
                return this.PackagePasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PackagePasswordField, value) != true)) {
                    this.PackagePasswordField = value;
                    this.RaisePropertyChanged("PackagePassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=23)]
        public string PackagePath {
            get {
                return this.PackagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.PackagePathField, value) != true)) {
                    this.PackagePathField = value;
                    this.RaisePropertyChanged("PackagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=24)]
        public long OrganizationID {
            get {
                return this.OrganizationIDField;
            }
            set {
                if ((this.OrganizationIDField.Equals(value) != true)) {
                    this.OrganizationIDField = value;
                    this.RaisePropertyChanged("OrganizationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=25)]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=26)]
        public long DivisionID {
            get {
                return this.DivisionIDField;
            }
            set {
                if ((this.DivisionIDField.Equals(value) != true)) {
                    this.DivisionIDField = value;
                    this.RaisePropertyChanged("DivisionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=27)]
        public string DivisionName {
            get {
                return this.DivisionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DivisionNameField, value) != true)) {
                    this.DivisionNameField = value;
                    this.RaisePropertyChanged("DivisionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=28)]
        public long ProcessID {
            get {
                return this.ProcessIDField;
            }
            set {
                if ((this.ProcessIDField.Equals(value) != true)) {
                    this.ProcessIDField = value;
                    this.RaisePropertyChanged("ProcessID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=29)]
        public string ProcessName {
            get {
                return this.ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessNameField, value) != true)) {
                    this.ProcessNameField = value;
                    this.RaisePropertyChanged("ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=30)]
        public long EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=31)]
        public string EventName {
            get {
                return this.EventNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EventNameField, value) != true)) {
                    this.EventNameField = value;
                    this.RaisePropertyChanged("EventName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=32)]
        public long BatchID {
            get {
                return this.BatchIDField;
            }
            set {
                if ((this.BatchIDField.Equals(value) != true)) {
                    this.BatchIDField = value;
                    this.RaisePropertyChanged("BatchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=33)]
        public string BatchName {
            get {
                return this.BatchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchNameField, value) != true)) {
                    this.BatchNameField = value;
                    this.RaisePropertyChanged("BatchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=34)]
        public string TestCenterName {
            get {
                return this.TestCenterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TestCenterNameField, value) != true)) {
                    this.TestCenterNameField = value;
                    this.RaisePropertyChanged("TestCenterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=35)]
        public System.DateTime ScheduleDate {
            get {
                return this.ScheduleDateField;
            }
            set {
                if ((this.ScheduleDateField.Equals(value) != true)) {
                    this.ScheduleDateField = value;
                    this.RaisePropertyChanged("ScheduleDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=36)]
        public System.DateTime ScheduleStartDate {
            get {
                return this.ScheduleStartDateField;
            }
            set {
                if ((this.ScheduleStartDateField.Equals(value) != true)) {
                    this.ScheduleStartDateField = value;
                    this.RaisePropertyChanged("ScheduleStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=37)]
        public System.DateTime ScheduleEndDate {
            get {
                return this.ScheduleEndDateField;
            }
            set {
                if ((this.ScheduleEndDateField.Equals(value) != true)) {
                    this.ScheduleEndDateField = value;
                    this.RaisePropertyChanged("ScheduleEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=38)]
        public int LeadTimeForQPackDispatchInMinutes {
            get {
                return this.LeadTimeForQPackDispatchInMinutesField;
            }
            set {
                if ((this.LeadTimeForQPackDispatchInMinutesField.Equals(value) != true)) {
                    this.LeadTimeForQPackDispatchInMinutesField = value;
                    this.RaisePropertyChanged("LeadTimeForQPackDispatchInMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=39)]
        public bool DeleteQPackAfterExamination {
            get {
                return this.DeleteQPackAfterExaminationField;
            }
            set {
                if ((this.DeleteQPackAfterExaminationField.Equals(value) != true)) {
                    this.DeleteQPackAfterExaminationField = value;
                    this.RaisePropertyChanged("DeleteQPackAfterExamination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=40)]
        public bool RPackToBeSentImmediatelyAfterExamination {
            get {
                return this.RPackToBeSentImmediatelyAfterExaminationField;
            }
            set {
                if ((this.RPackToBeSentImmediatelyAfterExaminationField.Equals(value) != true)) {
                    this.RPackToBeSentImmediatelyAfterExaminationField = value;
                    this.RaisePropertyChanged("RPackToBeSentImmediatelyAfterExamination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=41)]
        public bool RPackToBeSentAtEOD {
            get {
                return this.RPackToBeSentAtEODField;
            }
            set {
                if ((this.RPackToBeSentAtEODField.Equals(value) != true)) {
                    this.RPackToBeSentAtEODField = value;
                    this.RaisePropertyChanged("RPackToBeSentAtEOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=42)]
        public bool DeleteRPackAfterExamination {
            get {
                return this.DeleteRPackAfterExaminationField;
            }
            set {
                if ((this.DeleteRPackAfterExaminationField.Equals(value) != true)) {
                    this.DeleteRPackAfterExaminationField = value;
                    this.RaisePropertyChanged("DeleteRPackAfterExamination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=43)]
        public bool DeleteRPackAtEOD {
            get {
                return this.DeleteRPackAtEODField;
            }
            set {
                if ((this.DeleteRPackAtEODField.Equals(value) != true)) {
                    this.DeleteRPackAtEODField = value;
                    this.RaisePropertyChanged("DeleteRPackAtEOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=44)]
        public bool PackageDeletedStatus {
            get {
                return this.PackageDeletedStatusField;
            }
            set {
                if ((this.PackageDeletedStatusField.Equals(value) != true)) {
                    this.PackageDeletedStatusField = value;
                    this.RaisePropertyChanged("PackageDeletedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=45)]
        public bool IsCentralizedPackage {
            get {
                return this.IsCentralizedPackageField;
            }
            set {
                if ((this.IsCentralizedPackageField.Equals(value) != true)) {
                    this.IsCentralizedPackageField = value;
                    this.RaisePropertyChanged("IsCentralizedPackage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=46)]
        public string Extension1 {
            get {
                return this.Extension1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Extension1Field, value) != true)) {
                    this.Extension1Field = value;
                    this.RaisePropertyChanged("Extension1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=47)]
        public string Extension2 {
            get {
                return this.Extension2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Extension2Field, value) != true)) {
                    this.Extension2Field = value;
                    this.RaisePropertyChanged("Extension2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=48)]
        public string Extension3 {
            get {
                return this.Extension3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Extension3Field, value) != true)) {
                    this.Extension3Field = value;
                    this.RaisePropertyChanged("Extension3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=49)]
        public string Extension4 {
            get {
                return this.Extension4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Extension4Field, value) != true)) {
                    this.Extension4Field = value;
                    this.RaisePropertyChanged("Extension4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=50)]
        public string Extension5 {
            get {
                return this.Extension5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Extension5Field, value) != true)) {
                    this.Extension5Field = value;
                    this.RaisePropertyChanged("Extension5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=51)]
        public long ScheduleDetailID {
            get {
                return this.ScheduleDetailIDField;
            }
            set {
                if ((this.ScheduleDetailIDField.Equals(value) != true)) {
                    this.ScheduleDetailIDField = value;
                    this.RaisePropertyChanged("ScheduleDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=52)]
        public System.DateTime LoadedDateTestCenter {
            get {
                return this.LoadedDateTestCenterField;
            }
            set {
                if ((this.LoadedDateTestCenterField.Equals(value) != true)) {
                    this.LoadedDateTestCenterField = value;
                    this.RaisePropertyChanged("LoadedDateTestCenter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=53)]
        public bool IsPackageGenerated {
            get {
                return this.IsPackageGeneratedField;
            }
            set {
                if ((this.IsPackageGeneratedField.Equals(value) != true)) {
                    this.IsPackageGeneratedField = value;
                    this.RaisePropertyChanged("IsPackageGenerated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=54)]
        public bool IsLatest {
            get {
                return this.IsLatestField;
            }
            set {
                if ((this.IsLatestField.Equals(value) != true)) {
                    this.IsLatestField = value;
                    this.RaisePropertyChanged("IsLatest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=55)]
        public System.DateTime LoadedDateCentralized {
            get {
                return this.LoadedDateCentralizedField;
            }
            set {
                if ((this.LoadedDateCentralizedField.Equals(value) != true)) {
                    this.LoadedDateCentralizedField = value;
                    this.RaisePropertyChanged("LoadedDateCentralized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=56)]
        public System.DateTime LoadedDateDistributed {
            get {
                return this.LoadedDateDistributedField;
            }
            set {
                if ((this.LoadedDateDistributedField.Equals(value) != true)) {
                    this.LoadedDateDistributedField = value;
                    this.RaisePropertyChanged("LoadedDateDistributed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferMedium", Namespace="http://schemas.datacontract.org/2004/07/LicensingAndTransfer.DataContracts")]
    public enum TransferMedium : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FTP = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SharedPath = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HTTP = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PackageDetails", Namespace="http://LicensingAndTransfer.DataContracts/2010/01")]
    [System.SerializableAttribute()]
    public partial class PackageDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long ScheduleDetailIDField;
        
        private long CenterIDField;
        
        private LicensingAndTransfer.Client.localhost.PackageOperation OperationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long ScheduleDetailID {
            get {
                return this.ScheduleDetailIDField;
            }
            set {
                if ((this.ScheduleDetailIDField.Equals(value) != true)) {
                    this.ScheduleDetailIDField = value;
                    this.RaisePropertyChanged("ScheduleDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public long CenterID {
            get {
                return this.CenterIDField;
            }
            set {
                if ((this.CenterIDField.Equals(value) != true)) {
                    this.CenterIDField = value;
                    this.RaisePropertyChanged("CenterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public LicensingAndTransfer.Client.localhost.PackageOperation Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((this.OperationField.Equals(value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PackageOperation", Namespace="http://schemas.datacontract.org/2004/07/LicensingAndTransfer.DataContracts")]
    public enum PackageOperation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackageReGenerate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackageReTransfer = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PackageLoadedDate", Namespace="http://LicensingAndTransfer.DataContracts/2010/01")]
    [System.SerializableAttribute()]
    public partial class PackageLoadedDate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string PackageNameField;
        
        private System.DateTime LoadedDateTestCenterField;
        
        private System.DateTime LoadedDateCentralizedField;
        
        private System.DateTime LoadedDateDistributedField;
        
        private string Extension5Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PackageName {
            get {
                return this.PackageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageNameField, value) != true)) {
                    this.PackageNameField = value;
                    this.RaisePropertyChanged("PackageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public System.DateTime LoadedDateTestCenter {
            get {
                return this.LoadedDateTestCenterField;
            }
            set {
                if ((this.LoadedDateTestCenterField.Equals(value) != true)) {
                    this.LoadedDateTestCenterField = value;
                    this.RaisePropertyChanged("LoadedDateTestCenter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.DateTime LoadedDateCentralized {
            get {
                return this.LoadedDateCentralizedField;
            }
            set {
                if ((this.LoadedDateCentralizedField.Equals(value) != true)) {
                    this.LoadedDateCentralizedField = value;
                    this.RaisePropertyChanged("LoadedDateCentralized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.DateTime LoadedDateDistributed {
            get {
                return this.LoadedDateDistributedField;
            }
            set {
                if ((this.LoadedDateDistributedField.Equals(value) != true)) {
                    this.LoadedDateDistributedField = value;
                    this.RaisePropertyChanged("LoadedDateDistributed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public string Extension5 {
            get {
                return this.Extension5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Extension5Field, value) != true)) {
                    this.Extension5Field = value;
                    this.RaisePropertyChanged("Extension5");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Batch", Namespace="http://LicensingAndTransfer.DataContracts/2010/01")]
    [System.SerializableAttribute()]
    public partial class Batch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long ScheduleDetailIDField;
        
        private long UserIDField;
        
        private long TestCenterIDField;
        
        private System.DateTime PreviousEndDateField;
        
        private System.DateTime PresentEndDateField;
        
        private bool IsNotifiedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long ScheduleDetailID {
            get {
                return this.ScheduleDetailIDField;
            }
            set {
                if ((this.ScheduleDetailIDField.Equals(value) != true)) {
                    this.ScheduleDetailIDField = value;
                    this.RaisePropertyChanged("ScheduleDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public long TestCenterID {
            get {
                return this.TestCenterIDField;
            }
            set {
                if ((this.TestCenterIDField.Equals(value) != true)) {
                    this.TestCenterIDField = value;
                    this.RaisePropertyChanged("TestCenterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.DateTime PreviousEndDate {
            get {
                return this.PreviousEndDateField;
            }
            set {
                if ((this.PreviousEndDateField.Equals(value) != true)) {
                    this.PreviousEndDateField = value;
                    this.RaisePropertyChanged("PreviousEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public System.DateTime PresentEndDate {
            get {
                return this.PresentEndDateField;
            }
            set {
                if ((this.PresentEndDateField.Equals(value) != true)) {
                    this.PresentEndDateField = value;
                    this.RaisePropertyChanged("PresentEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public bool IsNotified {
            get {
                return this.IsNotifiedField;
            }
            set {
                if ((this.IsNotifiedField.Equals(value) != true)) {
                    this.IsNotifiedField = value;
                    this.RaisePropertyChanged("IsNotified");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://LicensingAndTransfer.DataContracts/2010/01")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long UserIDField;
        
        private string FirstNameField;
        
        private string LoginNameField;
        
        private string PasswordField;
        
        private string EmailField;
        
        private string LastNameField;
        
        private long ClassIDField;
        
        private int YearIDField;
        
        private long UserTypeField;
        
        private long OrganizationIDField;
        
        private long CreatedByField;
        
        private System.DateTime CreatedDateField;
        
        private long ModifiedByField;
        
        private System.DateTime ModifiedDateField;
        
        private bool IsDeletedField;
        
        private bool IsOffLineAuthoringField;
        
        private bool IsLoggedINField;
        
        private bool IsActiveField;
        
        private bool IsApproveField;
        
        private bool IsAllowEditField;
        
        private long ManagerIDField;
        
        private string UserCodeField;
        
        private bool IsFirstTimeLoggedInField;
        
        private long OfficeIDField;
        
        private long SectionIDField;
        
        private bool IsManagerField;
        
        private int LoginCountField;
        
        private System.DateTime PasswordLastModifiedDateField;
        
        private decimal AdditionalTimeInPercentField;
        
        private bool IsBlockField;
        
        private string CourseTypeField;
        
        private string CourseField;
        
        private string EnrollmentNumberField;
        
        private System.DateTime LastLoginDateField;
        
        private System.DateTime LastLogoutDateField;
        
        private long LocationIDField;
        
        private string AnnotationSettingsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public long ClassID {
            get {
                return this.ClassIDField;
            }
            set {
                if ((this.ClassIDField.Equals(value) != true)) {
                    this.ClassIDField = value;
                    this.RaisePropertyChanged("ClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public int YearID {
            get {
                return this.YearIDField;
            }
            set {
                if ((this.YearIDField.Equals(value) != true)) {
                    this.YearIDField = value;
                    this.RaisePropertyChanged("YearID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public long UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((this.UserTypeField.Equals(value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public long OrganizationID {
            get {
                return this.OrganizationIDField;
            }
            set {
                if ((this.OrganizationIDField.Equals(value) != true)) {
                    this.OrganizationIDField = value;
                    this.RaisePropertyChanged("OrganizationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public long ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=13)]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=14)]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=15)]
        public bool IsOffLineAuthoring {
            get {
                return this.IsOffLineAuthoringField;
            }
            set {
                if ((this.IsOffLineAuthoringField.Equals(value) != true)) {
                    this.IsOffLineAuthoringField = value;
                    this.RaisePropertyChanged("IsOffLineAuthoring");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=16)]
        public bool IsLoggedIN {
            get {
                return this.IsLoggedINField;
            }
            set {
                if ((this.IsLoggedINField.Equals(value) != true)) {
                    this.IsLoggedINField = value;
                    this.RaisePropertyChanged("IsLoggedIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=17)]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=18)]
        public bool IsApprove {
            get {
                return this.IsApproveField;
            }
            set {
                if ((this.IsApproveField.Equals(value) != true)) {
                    this.IsApproveField = value;
                    this.RaisePropertyChanged("IsApprove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=19)]
        public bool IsAllowEdit {
            get {
                return this.IsAllowEditField;
            }
            set {
                if ((this.IsAllowEditField.Equals(value) != true)) {
                    this.IsAllowEditField = value;
                    this.RaisePropertyChanged("IsAllowEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=20)]
        public long ManagerID {
            get {
                return this.ManagerIDField;
            }
            set {
                if ((this.ManagerIDField.Equals(value) != true)) {
                    this.ManagerIDField = value;
                    this.RaisePropertyChanged("ManagerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=21)]
        public string UserCode {
            get {
                return this.UserCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCodeField, value) != true)) {
                    this.UserCodeField = value;
                    this.RaisePropertyChanged("UserCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=22)]
        public bool IsFirstTimeLoggedIn {
            get {
                return this.IsFirstTimeLoggedInField;
            }
            set {
                if ((this.IsFirstTimeLoggedInField.Equals(value) != true)) {
                    this.IsFirstTimeLoggedInField = value;
                    this.RaisePropertyChanged("IsFirstTimeLoggedIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=23)]
        public long OfficeID {
            get {
                return this.OfficeIDField;
            }
            set {
                if ((this.OfficeIDField.Equals(value) != true)) {
                    this.OfficeIDField = value;
                    this.RaisePropertyChanged("OfficeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=24)]
        public long SectionID {
            get {
                return this.SectionIDField;
            }
            set {
                if ((this.SectionIDField.Equals(value) != true)) {
                    this.SectionIDField = value;
                    this.RaisePropertyChanged("SectionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=25)]
        public bool IsManager {
            get {
                return this.IsManagerField;
            }
            set {
                if ((this.IsManagerField.Equals(value) != true)) {
                    this.IsManagerField = value;
                    this.RaisePropertyChanged("IsManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=26)]
        public int LoginCount {
            get {
                return this.LoginCountField;
            }
            set {
                if ((this.LoginCountField.Equals(value) != true)) {
                    this.LoginCountField = value;
                    this.RaisePropertyChanged("LoginCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=27)]
        public System.DateTime PasswordLastModifiedDate {
            get {
                return this.PasswordLastModifiedDateField;
            }
            set {
                if ((this.PasswordLastModifiedDateField.Equals(value) != true)) {
                    this.PasswordLastModifiedDateField = value;
                    this.RaisePropertyChanged("PasswordLastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=28)]
        public decimal AdditionalTimeInPercent {
            get {
                return this.AdditionalTimeInPercentField;
            }
            set {
                if ((this.AdditionalTimeInPercentField.Equals(value) != true)) {
                    this.AdditionalTimeInPercentField = value;
                    this.RaisePropertyChanged("AdditionalTimeInPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=29)]
        public bool IsBlock {
            get {
                return this.IsBlockField;
            }
            set {
                if ((this.IsBlockField.Equals(value) != true)) {
                    this.IsBlockField = value;
                    this.RaisePropertyChanged("IsBlock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=30)]
        public string CourseType {
            get {
                return this.CourseTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseTypeField, value) != true)) {
                    this.CourseTypeField = value;
                    this.RaisePropertyChanged("CourseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=31)]
        public string Course {
            get {
                return this.CourseField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseField, value) != true)) {
                    this.CourseField = value;
                    this.RaisePropertyChanged("Course");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=32)]
        public string EnrollmentNumber {
            get {
                return this.EnrollmentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EnrollmentNumberField, value) != true)) {
                    this.EnrollmentNumberField = value;
                    this.RaisePropertyChanged("EnrollmentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=33)]
        public System.DateTime LastLoginDate {
            get {
                return this.LastLoginDateField;
            }
            set {
                if ((this.LastLoginDateField.Equals(value) != true)) {
                    this.LastLoginDateField = value;
                    this.RaisePropertyChanged("LastLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=34)]
        public System.DateTime LastLogoutDate {
            get {
                return this.LastLogoutDateField;
            }
            set {
                if ((this.LastLogoutDateField.Equals(value) != true)) {
                    this.LastLogoutDateField = value;
                    this.RaisePropertyChanged("LastLogoutDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=35)]
        public long LocationID {
            get {
                return this.LocationIDField;
            }
            set {
                if ((this.LocationIDField.Equals(value) != true)) {
                    this.LocationIDField = value;
                    this.RaisePropertyChanged("LocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=36)]
        public string AnnotationSettings {
            get {
                return this.AnnotationSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.AnnotationSettingsField, value) != true)) {
                    this.AnnotationSettingsField = value;
                    this.RaisePropertyChanged("AnnotationSettings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://LicensingAndTransfer.DataContracts/2010/01")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private LicensingAndTransfer.Client.localhost.RoleToPrivilages[] ListRoleToPrivilagesField;
        
        private long RoleIDField;
        
        private string RoleNameField;
        
        private string RoleDescriptionField;
        
        private bool IsDeletedField;
        
        private long RoleTypeField;
        
        private long CustomerIDField;
        
        private long DocumentIdField;
        
        private string DocumentUrlField;
        
        private string CodeField;
        
        private long MetadataIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public LicensingAndTransfer.Client.localhost.RoleToPrivilages[] ListRoleToPrivilages {
            get {
                return this.ListRoleToPrivilagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ListRoleToPrivilagesField, value) != true)) {
                    this.ListRoleToPrivilagesField = value;
                    this.RaisePropertyChanged("ListRoleToPrivilages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string RoleDescription {
            get {
                return this.RoleDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleDescriptionField, value) != true)) {
                    this.RoleDescriptionField = value;
                    this.RaisePropertyChanged("RoleDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public long RoleType {
            get {
                return this.RoleTypeField;
            }
            set {
                if ((this.RoleTypeField.Equals(value) != true)) {
                    this.RoleTypeField = value;
                    this.RaisePropertyChanged("RoleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public long CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((this.CustomerIDField.Equals(value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public long DocumentId {
            get {
                return this.DocumentIdField;
            }
            set {
                if ((this.DocumentIdField.Equals(value) != true)) {
                    this.DocumentIdField = value;
                    this.RaisePropertyChanged("DocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public string DocumentUrl {
            get {
                return this.DocumentUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentUrlField, value) != true)) {
                    this.DocumentUrlField = value;
                    this.RaisePropertyChanged("DocumentUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public long MetadataID {
            get {
                return this.MetadataIDField;
            }
            set {
                if ((this.MetadataIDField.Equals(value) != true)) {
                    this.MetadataIDField = value;
                    this.RaisePropertyChanged("MetadataID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleToPrivilages", Namespace="http://LicensingAndTransfer.DataContracts/2010/01")]
    [System.SerializableAttribute()]
    public partial class RoleToPrivilages : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long RtoPIDField;
        
        private long RoleIdField;
        
        private long PrivilageIdField;
        
        private bool IsDeletedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long RtoPID {
            get {
                return this.RtoPIDField;
            }
            set {
                if ((this.RtoPIDField.Equals(value) != true)) {
                    this.RtoPIDField = value;
                    this.RaisePropertyChanged("RtoPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public long RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public long PrivilageId {
            get {
                return this.PrivilageIdField;
            }
            set {
                if ((this.PrivilageIdField.Equals(value) != true)) {
                    this.PrivilageIdField = value;
                    this.RaisePropertyChanged("PrivilageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Organization", Namespace="http://LicensingAndTransfer.DataContracts/2010/01")]
    [System.SerializableAttribute()]
    public partial class Organization : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long OrganizationIDField;
        
        private string OrganizationNameField;
        
        private string CustomerNumberField;
        
        private string PostCodeField;
        
        private string OrganizationCodeField;
        
        private string PhoneNoField;
        
        private string EmailIDField;
        
        private string WebAddressField;
        
        private string NotesField;
        
        private bool IsDeletedField;
        
        private string StandardPasswordField;
        
        private bool IsBlockedField;
        
        private long ParentIDField;
        
        private string LocationCodeField;
        
        private bool AllowStudentsToCreatePasswordField;
        
        private bool AllowTeachersToCreatePasswordField;
        
        private int OrganizationTypeField;
        
        private long ContactPersonField;
        
        private long LogoField;
        
        private long CountryIDField;
        
        private string LocationHeadField;
        
        private System.DateTime CreatedDateField;
        
        private System.DateTime ModifiedDateField;
        
        private string ThemeField;
        
        private long TestPlayerConcurrentUsersField;
        
        private string LegalNameField;
        
        private System.DateTime StartDateField;
        
        private System.DateTime EndDateField;
        
        private int OrganizationTypeIDField;
        
        private long MetadataIDField;
        
        private long CreatedByField;
        
        private long ModifiedByField;
        
        private long LocationIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long OrganizationID {
            get {
                return this.OrganizationIDField;
            }
            set {
                if ((this.OrganizationIDField.Equals(value) != true)) {
                    this.OrganizationIDField = value;
                    this.RaisePropertyChanged("OrganizationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNumberField, value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public string OrganizationCode {
            get {
                return this.OrganizationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationCodeField, value) != true)) {
                    this.OrganizationCodeField = value;
                    this.RaisePropertyChanged("OrganizationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public string PhoneNo {
            get {
                return this.PhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNoField, value) != true)) {
                    this.PhoneNoField = value;
                    this.RaisePropertyChanged("PhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public string EmailID {
            get {
                return this.EmailIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIDField, value) != true)) {
                    this.EmailIDField = value;
                    this.RaisePropertyChanged("EmailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public string WebAddress {
            get {
                return this.WebAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.WebAddressField, value) != true)) {
                    this.WebAddressField = value;
                    this.RaisePropertyChanged("WebAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public string StandardPassword {
            get {
                return this.StandardPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.StandardPasswordField, value) != true)) {
                    this.StandardPasswordField = value;
                    this.RaisePropertyChanged("StandardPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public bool IsBlocked {
            get {
                return this.IsBlockedField;
            }
            set {
                if ((this.IsBlockedField.Equals(value) != true)) {
                    this.IsBlockedField = value;
                    this.RaisePropertyChanged("IsBlocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public long ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=13)]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=14)]
        public bool AllowStudentsToCreatePassword {
            get {
                return this.AllowStudentsToCreatePasswordField;
            }
            set {
                if ((this.AllowStudentsToCreatePasswordField.Equals(value) != true)) {
                    this.AllowStudentsToCreatePasswordField = value;
                    this.RaisePropertyChanged("AllowStudentsToCreatePassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=15)]
        public bool AllowTeachersToCreatePassword {
            get {
                return this.AllowTeachersToCreatePasswordField;
            }
            set {
                if ((this.AllowTeachersToCreatePasswordField.Equals(value) != true)) {
                    this.AllowTeachersToCreatePasswordField = value;
                    this.RaisePropertyChanged("AllowTeachersToCreatePassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=16)]
        public int OrganizationType {
            get {
                return this.OrganizationTypeField;
            }
            set {
                if ((this.OrganizationTypeField.Equals(value) != true)) {
                    this.OrganizationTypeField = value;
                    this.RaisePropertyChanged("OrganizationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=17)]
        public long ContactPerson {
            get {
                return this.ContactPersonField;
            }
            set {
                if ((this.ContactPersonField.Equals(value) != true)) {
                    this.ContactPersonField = value;
                    this.RaisePropertyChanged("ContactPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=18)]
        public long Logo {
            get {
                return this.LogoField;
            }
            set {
                if ((this.LogoField.Equals(value) != true)) {
                    this.LogoField = value;
                    this.RaisePropertyChanged("Logo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=19)]
        public long CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=20)]
        public string LocationHead {
            get {
                return this.LocationHeadField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationHeadField, value) != true)) {
                    this.LocationHeadField = value;
                    this.RaisePropertyChanged("LocationHead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=21)]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=22)]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=23)]
        public string Theme {
            get {
                return this.ThemeField;
            }
            set {
                if ((object.ReferenceEquals(this.ThemeField, value) != true)) {
                    this.ThemeField = value;
                    this.RaisePropertyChanged("Theme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=24)]
        public long TestPlayerConcurrentUsers {
            get {
                return this.TestPlayerConcurrentUsersField;
            }
            set {
                if ((this.TestPlayerConcurrentUsersField.Equals(value) != true)) {
                    this.TestPlayerConcurrentUsersField = value;
                    this.RaisePropertyChanged("TestPlayerConcurrentUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=25)]
        public string LegalName {
            get {
                return this.LegalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNameField, value) != true)) {
                    this.LegalNameField = value;
                    this.RaisePropertyChanged("LegalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=26)]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=27)]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=28)]
        public int OrganizationTypeID {
            get {
                return this.OrganizationTypeIDField;
            }
            set {
                if ((this.OrganizationTypeIDField.Equals(value) != true)) {
                    this.OrganizationTypeIDField = value;
                    this.RaisePropertyChanged("OrganizationTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=29)]
        public long MetadataID {
            get {
                return this.MetadataIDField;
            }
            set {
                if ((this.MetadataIDField.Equals(value) != true)) {
                    this.MetadataIDField = value;
                    this.RaisePropertyChanged("MetadataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=30)]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=31)]
        public long ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=32)]
        public long LocationID {
            get {
                return this.LocationIDField;
            }
            set {
                if ((this.LocationIDField.Equals(value) != true)) {
                    this.LocationIDField = value;
                    this.RaisePropertyChanged("LocationID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", ConfigurationName="localhost.ILicensingAndTransfer")]
    public interface ILicensingAndTransfer {
        
        // CODEGEN: Generating message contract since the wrapper name (TestCenterRegistrationRequest) of message TestCenterRegistrationRequest does not match the default value (TestCenterRegistration)
        [System.ServiceModel.OperationContractAttribute(Action="TestCenterRegistratiom", ReplyAction="http://LicensingAndTransfer.ServiceContracts/2010/01/ILicensingAndTransfer/TestCe" +
            "nterRegistrationResponse")]
        LicensingAndTransfer.Client.localhost.TestCenterRegistrationResponse TestCenterRegistration(LicensingAndTransfer.Client.localhost.TestCenterRegistrationRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (CreateFTPSessionRequest) of message CreateFTPSessionRequest does not match the default value (CreateFTPSession)
        [System.ServiceModel.OperationContractAttribute(Action="CreateFTPSession", ReplyAction="http://LicensingAndTransfer.ServiceContracts/2010/01/ILicensingAndTransfer/Create" +
            "FTPSessionResponse")]
        LicensingAndTransfer.Client.localhost.CreateFTPSessionResponse CreateFTPSession(LicensingAndTransfer.Client.localhost.CreateFTPSessionRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (CompleteFTPSessionRequest) of message CompleteFTPSessionRequest does not match the default value (CompleteFTPSession)
        [System.ServiceModel.OperationContractAttribute(Action="CompleteFTPSession", ReplyAction="http://LicensingAndTransfer.ServiceContracts/2010/01/ILicensingAndTransfer/Comple" +
            "teFTPSessionResponse")]
        LicensingAndTransfer.Client.localhost.CompleteFTPSessionResponse CompleteFTPSession(LicensingAndTransfer.Client.localhost.CompleteFTPSessionRequest request);
        
        // CODEGEN: Generating message contract since the operation PackageReTransferOrReGenerate is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="PackageReTransferOrReGenerate", ReplyAction="http://LicensingAndTransfer.ServiceContracts/2010/01/ILicensingAndTransfer/Packag" +
            "eReTransferOrReGenerateResponse")]
        LicensingAndTransfer.Client.localhost.PackageReTransferOrReGenerateResponse PackageReTransferOrReGenerate(LicensingAndTransfer.Client.localhost.PackageReTransferReGenerateRequest request);
        
        // CODEGEN: Generating message contract since the operation UpdatePackageStatistics is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UpdatePackageStatistics", ReplyAction="http://LicensingAndTransfer.ServiceContracts/2010/01/ILicensingAndTransfer/Update" +
            "PackageStatisticsResponse")]
        LicensingAndTransfer.Client.localhost.UpdatePackageStatisticsResponse UpdatePackageStatistics(LicensingAndTransfer.Client.localhost.UpdatePackageStatisticsRequest request);
        
        // CODEGEN: Generating message contract since the operation UpdatePackageLoadedDate is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UpdatePackageLoadedDate", ReplyAction="http://LicensingAndTransfer.ServiceContracts/2010/01/ILicensingAndTransfer/Update" +
            "PackageLoadedDateResponse")]
        LicensingAndTransfer.Client.localhost.UpdatePackageLoadedDateResponse UpdatePackageLoadedDate(LicensingAndTransfer.Client.localhost.UpdatePackageLoadedDateRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (ValidateTestCenterRequest) of message ValidateTestCenterRequest does not match the default value (ValidateTestCenter)
        [System.ServiceModel.OperationContractAttribute(Action="ValidateTestCenter", ReplyAction="http://LicensingAndTransfer.ServiceContracts/2010/01/ILicensingAndTransfer/Valida" +
            "teTestCenterResponse")]
        LicensingAndTransfer.Client.localhost.ValidateTestCenterResponse ValidateTestCenter(LicensingAndTransfer.Client.localhost.ValidateTestCenterRequest request);
        
        // CODEGEN: Generating message contract since the operation GetDXUTCDateTime is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="GetDXUTCDateTime", ReplyAction="http://LicensingAndTransfer.ServiceContracts/2010/01/ILicensingAndTransfer/GetDXU" +
            "TCDateTimeResponse")]
        LicensingAndTransfer.Client.localhost.DXUTCDateTimeResponse GetDXUTCDateTime(LicensingAndTransfer.Client.localhost.GetDXUTCDateTimeRequest request);
        
        // CODEGEN: Generating message contract since the operation SynchronizeDBData is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="SynchronizeDBData", ReplyAction="http://LicensingAndTransfer.ServiceContracts/2010/01/ILicensingAndTransfer/Synchr" +
            "onizeDBDataResponse")]
        LicensingAndTransfer.Client.localhost.ScriptResponse SynchronizeDBData(LicensingAndTransfer.Client.localhost.SynchronizeDBDataRequest request);
        
        // CODEGEN: Generating message contract since the operation UpdateBatchEndTime is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UpdateBatchEndTime", ReplyAction="http://LicensingAndTransfer.ServiceContracts/2010/01/ILicensingAndTransfer/Update" +
            "BatchEndTimeResponse")]
        LicensingAndTransfer.Client.localhost.UpdateBatchEndTimeResponse UpdateBatchEndTime(LicensingAndTransfer.Client.localhost.BatchEndTimeUpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation ManageUser is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="ManageUser", ReplyAction="http://LicensingAndTransfer.ServiceContracts/2010/01/ILicensingAndTransfer/Manage" +
            "UserResponse")]
        LicensingAndTransfer.Client.localhost.ManageUserResponse ManageUser(LicensingAndTransfer.Client.localhost.UserRequest request);
        
        // CODEGEN: Generating message contract since the operation ManageRole is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="ManageRole", ReplyAction="http://LicensingAndTransfer.ServiceContracts/2010/01/ILicensingAndTransfer/Manage" +
            "RoleResponse")]
        LicensingAndTransfer.Client.localhost.ManageRoleResponse ManageRole(LicensingAndTransfer.Client.localhost.RoleRequest request);
        
        // CODEGEN: Generating message contract since the operation ManageOrganization is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="ManageOrganization", ReplyAction="http://LicensingAndTransfer.ServiceContracts/2010/01/ILicensingAndTransfer/Manage" +
            "OrganizationResponse")]
        LicensingAndTransfer.Client.localhost.ManageOrganizationResponse ManageOrganization(LicensingAndTransfer.Client.localhost.OrganizationRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TestCenterRegistrationRequest", WrapperNamespace="http://LicensingAndTransfer.ServiceContracts/2010/01", IsWrapped=true)]
    public partial class TestCenterRegistrationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=0)]
        public LicensingAndTransfer.Client.localhost.TestCenter[] RequestField;
        
        public TestCenterRegistrationRequest() {
        }
        
        public TestCenterRegistrationRequest(LicensingAndTransfer.Client.localhost.TestCenter[] RequestField) {
            this.RequestField = RequestField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TestCenterRegistrationResponse", WrapperNamespace="http://LicensingAndTransfer.ServiceContracts/2010/01", IsWrapped=true)]
    public partial class TestCenterRegistrationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=0)]
        public LicensingAndTransfer.Client.localhost.TestCenter[] ResponseField;
        
        public TestCenterRegistrationResponse() {
        }
        
        public TestCenterRegistrationResponse(LicensingAndTransfer.Client.localhost.TestCenter[] ResponseField) {
            this.ResponseField = ResponseField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateFTPSessionRequest", WrapperNamespace="http://LicensingAndTransfer.ServiceContracts/2010/01", IsWrapped=true)]
    public partial class CreateFTPSessionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=0)]
        public string GuidFTPNameField;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=1)]
        public bool LoadPackagesFromDCDToDCCField;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=2)]
        public string MacIDField;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=3)]
        public LicensingAndTransfer.Client.localhost.ServerTypes ServerTypeField;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=4)]
        public LicensingAndTransfer.Client.localhost.Operations OperationField;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=5)]
        public LicensingAndTransfer.Client.localhost.PackageStatistics[] ListPackageStatisticsField;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=6)]
        public LicensingAndTransfer.Client.localhost.TransferMedium TransferMediumField;
        
        public CreateFTPSessionRequest() {
        }
        
        public CreateFTPSessionRequest(string GuidFTPNameField, bool LoadPackagesFromDCDToDCCField, string MacIDField, LicensingAndTransfer.Client.localhost.ServerTypes ServerTypeField, LicensingAndTransfer.Client.localhost.Operations OperationField, LicensingAndTransfer.Client.localhost.PackageStatistics[] ListPackageStatisticsField, LicensingAndTransfer.Client.localhost.TransferMedium TransferMediumField) {
            this.GuidFTPNameField = GuidFTPNameField;
            this.LoadPackagesFromDCDToDCCField = LoadPackagesFromDCDToDCCField;
            this.MacIDField = MacIDField;
            this.ServerTypeField = ServerTypeField;
            this.OperationField = OperationField;
            this.ListPackageStatisticsField = ListPackageStatisticsField;
            this.TransferMediumField = TransferMediumField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateFTPSessionResponse", WrapperNamespace="http://LicensingAndTransfer.ServiceContracts/2010/01", IsWrapped=true)]
    public partial class CreateFTPSessionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=0)]
        public string StatusField;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=1)]
        public LicensingAndTransfer.Client.localhost.PackageStatistics[] ListPackageStatisticsField;
        
        public CreateFTPSessionResponse() {
        }
        
        public CreateFTPSessionResponse(string StatusField, LicensingAndTransfer.Client.localhost.PackageStatistics[] ListPackageStatisticsField) {
            this.StatusField = StatusField;
            this.ListPackageStatisticsField = ListPackageStatisticsField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CompleteFTPSessionRequest", WrapperNamespace="http://LicensingAndTransfer.ServiceContracts/2010/01", IsWrapped=true)]
    public partial class CompleteFTPSessionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=0)]
        public string GuidFTPNameField;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=1)]
        public string MacIDField;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=2)]
        public LicensingAndTransfer.Client.localhost.ServerTypes ServerTypeField;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=3)]
        public LicensingAndTransfer.Client.localhost.Operations OperationField;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=4)]
        public LicensingAndTransfer.Client.localhost.PackageStatistics[] ListPackageStatisticsField;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=5)]
        public LicensingAndTransfer.Client.localhost.TransferMedium TransferMediumField;
        
        public CompleteFTPSessionRequest() {
        }
        
        public CompleteFTPSessionRequest(string GuidFTPNameField, string MacIDField, LicensingAndTransfer.Client.localhost.ServerTypes ServerTypeField, LicensingAndTransfer.Client.localhost.Operations OperationField, LicensingAndTransfer.Client.localhost.PackageStatistics[] ListPackageStatisticsField, LicensingAndTransfer.Client.localhost.TransferMedium TransferMediumField) {
            this.GuidFTPNameField = GuidFTPNameField;
            this.MacIDField = MacIDField;
            this.ServerTypeField = ServerTypeField;
            this.OperationField = OperationField;
            this.ListPackageStatisticsField = ListPackageStatisticsField;
            this.TransferMediumField = TransferMediumField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CompleteFTPSessionResponse", WrapperNamespace="http://LicensingAndTransfer.ServiceContracts/2010/01", IsWrapped=true)]
    public partial class CompleteFTPSessionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=0)]
        public LicensingAndTransfer.Client.localhost.PackageStatistics[] ListPackageStatisticsField;
        
        public CompleteFTPSessionResponse() {
        }
        
        public CompleteFTPSessionResponse(LicensingAndTransfer.Client.localhost.PackageStatistics[] ListPackageStatisticsField) {
            this.ListPackageStatisticsField = ListPackageStatisticsField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PackageReTransferReGenerateRequest", WrapperNamespace="http://LicensingAndTransfer.ServiceContracts/2010/01", IsWrapped=true)]
    public partial class PackageReTransferReGenerateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=0)]
        public LicensingAndTransfer.Client.localhost.PackageDetails[] ListPackageDetailsField;
        
        public PackageReTransferReGenerateRequest() {
        }
        
        public PackageReTransferReGenerateRequest(LicensingAndTransfer.Client.localhost.PackageDetails[] ListPackageDetailsField) {
            this.ListPackageDetailsField = ListPackageDetailsField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PackageReTransferOrReGenerateResponse {
        
        public PackageReTransferOrReGenerateResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePackageStatisticsRequest", WrapperNamespace="http://LicensingAndTransfer.ServiceContracts/2010/01", IsWrapped=true)]
    public partial class UpdatePackageStatisticsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=0)]
        public LicensingAndTransfer.Client.localhost.PackageStatistics[] ListPackageStatisticsField;
        
        public UpdatePackageStatisticsRequest() {
        }
        
        public UpdatePackageStatisticsRequest(LicensingAndTransfer.Client.localhost.PackageStatistics[] ListPackageStatisticsField) {
            this.ListPackageStatisticsField = ListPackageStatisticsField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdatePackageStatisticsResponse {
        
        public UpdatePackageStatisticsResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePackageLoadedDateRequest", WrapperNamespace="http://LicensingAndTransfer.ServiceContracts/2010/01", IsWrapped=true)]
    public partial class UpdatePackageLoadedDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=0)]
        public LicensingAndTransfer.Client.localhost.PackageLoadedDate[] ListPackageLoadedDateField;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=1)]
        public LicensingAndTransfer.Client.localhost.ServerTypes ServerTypeField;
        
        public UpdatePackageLoadedDateRequest() {
        }
        
        public UpdatePackageLoadedDateRequest(LicensingAndTransfer.Client.localhost.PackageLoadedDate[] ListPackageLoadedDateField, LicensingAndTransfer.Client.localhost.ServerTypes ServerTypeField) {
            this.ListPackageLoadedDateField = ListPackageLoadedDateField;
            this.ServerTypeField = ServerTypeField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdatePackageLoadedDateResponse {
        
        public UpdatePackageLoadedDateResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateTestCenterRequest", WrapperNamespace="http://LicensingAndTransfer.ServiceContracts/2010/01", IsWrapped=true)]
    public partial class ValidateTestCenterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=0)]
        public string MacIDField;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=1)]
        public LicensingAndTransfer.Client.localhost.ServerTypes ServerTypeField;
        
        public ValidateTestCenterRequest() {
        }
        
        public ValidateTestCenterRequest(string MacIDField, LicensingAndTransfer.Client.localhost.ServerTypes ServerTypeField) {
            this.MacIDField = MacIDField;
            this.ServerTypeField = ServerTypeField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateTestCenterResponse", WrapperNamespace="http://LicensingAndTransfer.ServiceContracts/2010/01", IsWrapped=true)]
    public partial class ValidateTestCenterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=0)]
        public string StatusCodeField;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=1)]
        public string StatusField;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=2)]
        public string MessageField;
        
        public ValidateTestCenterResponse() {
        }
        
        public ValidateTestCenterResponse(string StatusCodeField, string StatusField, string MessageField) {
            this.StatusCodeField = StatusCodeField;
            this.StatusField = StatusField;
            this.MessageField = MessageField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDXUTCDateTimeRequest {
        
        public GetDXUTCDateTimeRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DXUTCDateTimeResponse", WrapperNamespace="http://LicensingAndTransfer.ServiceContracts/2010/01", IsWrapped=true)]
    public partial class DXUTCDateTimeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=0)]
        public System.DateTime UTCDateTimeField;
        
        public DXUTCDateTimeResponse() {
        }
        
        public DXUTCDateTimeResponse(System.DateTime UTCDateTimeField) {
            this.UTCDateTimeField = UTCDateTimeField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SynchronizeDBDataRequest {
        
        public SynchronizeDBDataRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ScriptResponse", WrapperNamespace="http://LicensingAndTransfer.ServiceContracts/2010/01", IsWrapped=true)]
    public partial class ScriptResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=0)]
        public string ScriptField;
        
        public ScriptResponse() {
        }
        
        public ScriptResponse(string ScriptField) {
            this.ScriptField = ScriptField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BatchEndTimeUpdateRequest", WrapperNamespace="http://LicensingAndTransfer.ServiceContracts/2010/01", IsWrapped=true)]
    public partial class BatchEndTimeUpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=0)]
        public LicensingAndTransfer.Client.localhost.Batch[] BatchesField;
        
        public BatchEndTimeUpdateRequest() {
        }
        
        public BatchEndTimeUpdateRequest(LicensingAndTransfer.Client.localhost.Batch[] BatchesField) {
            this.BatchesField = BatchesField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateBatchEndTimeResponse {
        
        public UpdateBatchEndTimeResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UserRequest", WrapperNamespace="http://LicensingAndTransfer.ServiceContracts/2010/01", IsWrapped=true)]
    public partial class UserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=0)]
        public LicensingAndTransfer.Client.localhost.User[] UserProfilesField;
        
        public UserRequest() {
        }
        
        public UserRequest(LicensingAndTransfer.Client.localhost.User[] UserProfilesField) {
            this.UserProfilesField = UserProfilesField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ManageUserResponse {
        
        public ManageUserResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RoleRequest", WrapperNamespace="http://LicensingAndTransfer.ServiceContracts/2010/01", IsWrapped=true)]
    public partial class RoleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=0)]
        public LicensingAndTransfer.Client.localhost.Role[] UserRoleField;
        
        public RoleRequest() {
        }
        
        public RoleRequest(LicensingAndTransfer.Client.localhost.Role[] UserRoleField) {
            this.UserRoleField = UserRoleField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ManageRoleResponse {
        
        public ManageRoleResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OrganizationRequest", WrapperNamespace="http://LicensingAndTransfer.ServiceContracts/2010/01", IsWrapped=true)]
    public partial class OrganizationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://LicensingAndTransfer.ServiceContracts/2010/01", Order=0)]
        public LicensingAndTransfer.Client.localhost.Organization[] OrganizationField;
        
        public OrganizationRequest() {
        }
        
        public OrganizationRequest(LicensingAndTransfer.Client.localhost.Organization[] OrganizationField) {
            this.OrganizationField = OrganizationField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ManageOrganizationResponse {
        
        public ManageOrganizationResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILicensingAndTransferChannel : LicensingAndTransfer.Client.localhost.ILicensingAndTransfer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LicensingAndTransferClient : System.ServiceModel.ClientBase<LicensingAndTransfer.Client.localhost.ILicensingAndTransfer>, LicensingAndTransfer.Client.localhost.ILicensingAndTransfer {
        
        public LicensingAndTransferClient() {
        }
        
        public LicensingAndTransferClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LicensingAndTransferClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicensingAndTransferClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicensingAndTransferClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LicensingAndTransfer.Client.localhost.TestCenterRegistrationResponse LicensingAndTransfer.Client.localhost.ILicensingAndTransfer.TestCenterRegistration(LicensingAndTransfer.Client.localhost.TestCenterRegistrationRequest request) {
            return base.Channel.TestCenterRegistration(request);
        }
        
        public LicensingAndTransfer.Client.localhost.TestCenter[] TestCenterRegistration(LicensingAndTransfer.Client.localhost.TestCenter[] RequestField) {
            LicensingAndTransfer.Client.localhost.TestCenterRegistrationRequest inValue = new LicensingAndTransfer.Client.localhost.TestCenterRegistrationRequest();
            inValue.RequestField = RequestField;
            LicensingAndTransfer.Client.localhost.TestCenterRegistrationResponse retVal = ((LicensingAndTransfer.Client.localhost.ILicensingAndTransfer)(this)).TestCenterRegistration(inValue);
            return retVal.ResponseField;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LicensingAndTransfer.Client.localhost.CreateFTPSessionResponse LicensingAndTransfer.Client.localhost.ILicensingAndTransfer.CreateFTPSession(LicensingAndTransfer.Client.localhost.CreateFTPSessionRequest request) {
            return base.Channel.CreateFTPSession(request);
        }
        
        public string CreateFTPSession(string GuidFTPNameField, bool LoadPackagesFromDCDToDCCField, string MacIDField, LicensingAndTransfer.Client.localhost.ServerTypes ServerTypeField, LicensingAndTransfer.Client.localhost.Operations OperationField, ref LicensingAndTransfer.Client.localhost.PackageStatistics[] ListPackageStatisticsField, LicensingAndTransfer.Client.localhost.TransferMedium TransferMediumField) {
            LicensingAndTransfer.Client.localhost.CreateFTPSessionRequest inValue = new LicensingAndTransfer.Client.localhost.CreateFTPSessionRequest();
            inValue.GuidFTPNameField = GuidFTPNameField;
            inValue.LoadPackagesFromDCDToDCCField = LoadPackagesFromDCDToDCCField;
            inValue.MacIDField = MacIDField;
            inValue.ServerTypeField = ServerTypeField;
            inValue.OperationField = OperationField;
            inValue.ListPackageStatisticsField = ListPackageStatisticsField;
            inValue.TransferMediumField = TransferMediumField;
            LicensingAndTransfer.Client.localhost.CreateFTPSessionResponse retVal = ((LicensingAndTransfer.Client.localhost.ILicensingAndTransfer)(this)).CreateFTPSession(inValue);
            ListPackageStatisticsField = retVal.ListPackageStatisticsField;
            return retVal.StatusField;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LicensingAndTransfer.Client.localhost.CompleteFTPSessionResponse LicensingAndTransfer.Client.localhost.ILicensingAndTransfer.CompleteFTPSession(LicensingAndTransfer.Client.localhost.CompleteFTPSessionRequest request) {
            return base.Channel.CompleteFTPSession(request);
        }
        
        public void CompleteFTPSession(string GuidFTPNameField, string MacIDField, LicensingAndTransfer.Client.localhost.ServerTypes ServerTypeField, LicensingAndTransfer.Client.localhost.Operations OperationField, ref LicensingAndTransfer.Client.localhost.PackageStatistics[] ListPackageStatisticsField, LicensingAndTransfer.Client.localhost.TransferMedium TransferMediumField) {
            LicensingAndTransfer.Client.localhost.CompleteFTPSessionRequest inValue = new LicensingAndTransfer.Client.localhost.CompleteFTPSessionRequest();
            inValue.GuidFTPNameField = GuidFTPNameField;
            inValue.MacIDField = MacIDField;
            inValue.ServerTypeField = ServerTypeField;
            inValue.OperationField = OperationField;
            inValue.ListPackageStatisticsField = ListPackageStatisticsField;
            inValue.TransferMediumField = TransferMediumField;
            LicensingAndTransfer.Client.localhost.CompleteFTPSessionResponse retVal = ((LicensingAndTransfer.Client.localhost.ILicensingAndTransfer)(this)).CompleteFTPSession(inValue);
            ListPackageStatisticsField = retVal.ListPackageStatisticsField;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LicensingAndTransfer.Client.localhost.PackageReTransferOrReGenerateResponse LicensingAndTransfer.Client.localhost.ILicensingAndTransfer.PackageReTransferOrReGenerate(LicensingAndTransfer.Client.localhost.PackageReTransferReGenerateRequest request) {
            return base.Channel.PackageReTransferOrReGenerate(request);
        }
        
        public void PackageReTransferOrReGenerate(LicensingAndTransfer.Client.localhost.PackageDetails[] ListPackageDetailsField) {
            LicensingAndTransfer.Client.localhost.PackageReTransferReGenerateRequest inValue = new LicensingAndTransfer.Client.localhost.PackageReTransferReGenerateRequest();
            inValue.ListPackageDetailsField = ListPackageDetailsField;
            LicensingAndTransfer.Client.localhost.PackageReTransferOrReGenerateResponse retVal = ((LicensingAndTransfer.Client.localhost.ILicensingAndTransfer)(this)).PackageReTransferOrReGenerate(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LicensingAndTransfer.Client.localhost.UpdatePackageStatisticsResponse LicensingAndTransfer.Client.localhost.ILicensingAndTransfer.UpdatePackageStatistics(LicensingAndTransfer.Client.localhost.UpdatePackageStatisticsRequest request) {
            return base.Channel.UpdatePackageStatistics(request);
        }
        
        public void UpdatePackageStatistics(LicensingAndTransfer.Client.localhost.PackageStatistics[] ListPackageStatisticsField) {
            LicensingAndTransfer.Client.localhost.UpdatePackageStatisticsRequest inValue = new LicensingAndTransfer.Client.localhost.UpdatePackageStatisticsRequest();
            inValue.ListPackageStatisticsField = ListPackageStatisticsField;
            LicensingAndTransfer.Client.localhost.UpdatePackageStatisticsResponse retVal = ((LicensingAndTransfer.Client.localhost.ILicensingAndTransfer)(this)).UpdatePackageStatistics(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LicensingAndTransfer.Client.localhost.UpdatePackageLoadedDateResponse LicensingAndTransfer.Client.localhost.ILicensingAndTransfer.UpdatePackageLoadedDate(LicensingAndTransfer.Client.localhost.UpdatePackageLoadedDateRequest request) {
            return base.Channel.UpdatePackageLoadedDate(request);
        }
        
        public void UpdatePackageLoadedDate(LicensingAndTransfer.Client.localhost.PackageLoadedDate[] ListPackageLoadedDateField, LicensingAndTransfer.Client.localhost.ServerTypes ServerTypeField) {
            LicensingAndTransfer.Client.localhost.UpdatePackageLoadedDateRequest inValue = new LicensingAndTransfer.Client.localhost.UpdatePackageLoadedDateRequest();
            inValue.ListPackageLoadedDateField = ListPackageLoadedDateField;
            inValue.ServerTypeField = ServerTypeField;
            LicensingAndTransfer.Client.localhost.UpdatePackageLoadedDateResponse retVal = ((LicensingAndTransfer.Client.localhost.ILicensingAndTransfer)(this)).UpdatePackageLoadedDate(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LicensingAndTransfer.Client.localhost.ValidateTestCenterResponse LicensingAndTransfer.Client.localhost.ILicensingAndTransfer.ValidateTestCenter(LicensingAndTransfer.Client.localhost.ValidateTestCenterRequest request) {
            return base.Channel.ValidateTestCenter(request);
        }
        
        public string ValidateTestCenter(string MacIDField, LicensingAndTransfer.Client.localhost.ServerTypes ServerTypeField, out string StatusField, out string MessageField) {
            LicensingAndTransfer.Client.localhost.ValidateTestCenterRequest inValue = new LicensingAndTransfer.Client.localhost.ValidateTestCenterRequest();
            inValue.MacIDField = MacIDField;
            inValue.ServerTypeField = ServerTypeField;
            LicensingAndTransfer.Client.localhost.ValidateTestCenterResponse retVal = ((LicensingAndTransfer.Client.localhost.ILicensingAndTransfer)(this)).ValidateTestCenter(inValue);
            StatusField = retVal.StatusField;
            MessageField = retVal.MessageField;
            return retVal.StatusCodeField;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LicensingAndTransfer.Client.localhost.DXUTCDateTimeResponse LicensingAndTransfer.Client.localhost.ILicensingAndTransfer.GetDXUTCDateTime(LicensingAndTransfer.Client.localhost.GetDXUTCDateTimeRequest request) {
            return base.Channel.GetDXUTCDateTime(request);
        }
        
        public System.DateTime GetDXUTCDateTime() {
            LicensingAndTransfer.Client.localhost.GetDXUTCDateTimeRequest inValue = new LicensingAndTransfer.Client.localhost.GetDXUTCDateTimeRequest();
            LicensingAndTransfer.Client.localhost.DXUTCDateTimeResponse retVal = ((LicensingAndTransfer.Client.localhost.ILicensingAndTransfer)(this)).GetDXUTCDateTime(inValue);
            return retVal.UTCDateTimeField;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LicensingAndTransfer.Client.localhost.ScriptResponse LicensingAndTransfer.Client.localhost.ILicensingAndTransfer.SynchronizeDBData(LicensingAndTransfer.Client.localhost.SynchronizeDBDataRequest request) {
            return base.Channel.SynchronizeDBData(request);
        }
        
        public string SynchronizeDBData() {
            LicensingAndTransfer.Client.localhost.SynchronizeDBDataRequest inValue = new LicensingAndTransfer.Client.localhost.SynchronizeDBDataRequest();
            LicensingAndTransfer.Client.localhost.ScriptResponse retVal = ((LicensingAndTransfer.Client.localhost.ILicensingAndTransfer)(this)).SynchronizeDBData(inValue);
            return retVal.ScriptField;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LicensingAndTransfer.Client.localhost.UpdateBatchEndTimeResponse LicensingAndTransfer.Client.localhost.ILicensingAndTransfer.UpdateBatchEndTime(LicensingAndTransfer.Client.localhost.BatchEndTimeUpdateRequest request) {
            return base.Channel.UpdateBatchEndTime(request);
        }
        
        public void UpdateBatchEndTime(LicensingAndTransfer.Client.localhost.Batch[] BatchesField) {
            LicensingAndTransfer.Client.localhost.BatchEndTimeUpdateRequest inValue = new LicensingAndTransfer.Client.localhost.BatchEndTimeUpdateRequest();
            inValue.BatchesField = BatchesField;
            LicensingAndTransfer.Client.localhost.UpdateBatchEndTimeResponse retVal = ((LicensingAndTransfer.Client.localhost.ILicensingAndTransfer)(this)).UpdateBatchEndTime(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LicensingAndTransfer.Client.localhost.ManageUserResponse LicensingAndTransfer.Client.localhost.ILicensingAndTransfer.ManageUser(LicensingAndTransfer.Client.localhost.UserRequest request) {
            return base.Channel.ManageUser(request);
        }
        
        public void ManageUser(LicensingAndTransfer.Client.localhost.User[] UserProfilesField) {
            LicensingAndTransfer.Client.localhost.UserRequest inValue = new LicensingAndTransfer.Client.localhost.UserRequest();
            inValue.UserProfilesField = UserProfilesField;
            LicensingAndTransfer.Client.localhost.ManageUserResponse retVal = ((LicensingAndTransfer.Client.localhost.ILicensingAndTransfer)(this)).ManageUser(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LicensingAndTransfer.Client.localhost.ManageRoleResponse LicensingAndTransfer.Client.localhost.ILicensingAndTransfer.ManageRole(LicensingAndTransfer.Client.localhost.RoleRequest request) {
            return base.Channel.ManageRole(request);
        }
        
        public void ManageRole(LicensingAndTransfer.Client.localhost.Role[] UserRoleField) {
            LicensingAndTransfer.Client.localhost.RoleRequest inValue = new LicensingAndTransfer.Client.localhost.RoleRequest();
            inValue.UserRoleField = UserRoleField;
            LicensingAndTransfer.Client.localhost.ManageRoleResponse retVal = ((LicensingAndTransfer.Client.localhost.ILicensingAndTransfer)(this)).ManageRole(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LicensingAndTransfer.Client.localhost.ManageOrganizationResponse LicensingAndTransfer.Client.localhost.ILicensingAndTransfer.ManageOrganization(LicensingAndTransfer.Client.localhost.OrganizationRequest request) {
            return base.Channel.ManageOrganization(request);
        }
        
        public void ManageOrganization(LicensingAndTransfer.Client.localhost.Organization[] OrganizationField) {
            LicensingAndTransfer.Client.localhost.OrganizationRequest inValue = new LicensingAndTransfer.Client.localhost.OrganizationRequest();
            inValue.OrganizationField = OrganizationField;
            LicensingAndTransfer.Client.localhost.ManageOrganizationResponse retVal = ((LicensingAndTransfer.Client.localhost.ILicensingAndTransfer)(this)).ManageOrganization(inValue);
        }
    }
}
